#!/bin/bash

DIR=$5

# trap "grep packets; exit;" SIGHUP SIGINT SIGTERM 

# tcpdump tcp -i eth0 -s0 -nn -q -w receive.pcap
# Find ethernet name and use first ethernet interface. 

#targetMAC="00:1e:06:32:52:1e"
#targetMAC="80:e6:50:05:63:06"

# $1 method
# $2 pps 
# $3 packet size
# $4 sec 
pps=$2
packet_size=$3
sec=$4

target_mac="$(ifconfig | grep Ethernet | awk '{print $5;}' | head -1)"

if [ "$target_mac" == "" ] ; then 
	echo "MAC address not available."
	exit
else
	echo "$target_mac available."
fi

ethname="$(ifconfig | grep $target_mac | awk '{print $1;}' | head -1)"

if [ "$ethname" == "" ] ; then
	echo "RECEIVER: Ethernet not available."
	exit
else 
	echo "RECEIVER: $ethname available."
fi

echo "RECEIVER: run tcpdump -i ${ethname} -s0 -nn -q -c $((pps*sec)) -w fname" 

#TODO(sungpia@me.com): find better way for detecting env and running appropriate command.
#sudo timeout $((sec+30)) tcpdump -i $ethname -s0 -nn -q -w $DIR/capture-${pps}-${packet_size}-${sec}-`date +"%Y-%m-%d-%H%M%S"`.pcap > $DIR/summary-${pps}-${packet_size}-${sec}-`date +"%Y-%m-%d-%H%M%S"` 2>&1  
sudo timeout $((sec+30)) tcpdump -i $ethname -s 1518 -nn -q -w $DIR/capture-${pps}-${packet_size}-${sec}-`date +"%Y-%m-%d-%H%M%S"`.pcap > $DIR/summary-${pps}-${packet_size}-${sec}-`date +"%Y-%m-%d-%H%M%S"` 2>&1

sleep 5
#grep packets ./summary | while read -r line ; do 
#  echo $line | awk '{print $1}' >> temp
#done
echo "RECEIVER: done tcpdump"
# Set network promiscuous
# euuuucho "ip link set $ethname promisc on"
#uu ip link set $ethname promisc on 

